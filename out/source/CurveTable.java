/* autogenerated by Processing revision 1277 on 2022-01-29 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class CurveTable extends PApplet {

int cols, rows;
int scl = 50;
int w = 2000;
int h = 1600;

float flying = 0;

float[][] terrain;

 public void setup() {
  /* size commented out by preprocessor */;
  cols = w / scl;
  rows = h/ scl;
  terrain = new float[cols][rows];
}


 public void draw() {

  flying -= 0.1f;

  float yoff = flying;
  for (int y = 0; y < rows; y++) {
    float xoff = 0;
    for (int x = 0; x < cols; x++) {
      terrain[x][y] = map(noise(xoff, yoff), 0, 1, -100, 100);
      xoff += 0.2f;
    }
    yoff += 0.2f;
  }



  background(0);
  stroke(55, 209, 123);
  noFill();

  frameRate(1);

  translate(width/2, height/2+50);
  rotateX(PI/2);
  rotateY(PI/1.9f);
  translate(-w/2, -h/2);
  for (int y = 0; y < rows-1; y++) {
    beginShape(TRIANGLE_STRIP);
    for (int x = 0; x < cols; x++) {
      vertex(x*scl, y*scl, terrain[x][y]);
      vertex(x*scl, (y+1)*scl, terrain[x][y+1]);
      //rect(x*scl, y*scl, scl, scl);
    }
    endShape();
  }
}


  public void settings() { size(800, 800, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "CurveTable" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
